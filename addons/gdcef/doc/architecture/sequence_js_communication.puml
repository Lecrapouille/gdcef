@startuml

participant "GDScript" as GD
participant "Main Process\n(Godot)" as MP
participant "Render Process\n(CEF)" as RP
participant "JavaScript\n(Renderer Process)" as JS

== Godot to JavaScript ==

GD -> MP : send_to_js("character_update", data)
activate MP

MP -> RP : SendProcessMessage("GodotToJS", ["character_update", data])
activate RP

RP -> RP : OnProcessMessageReceived()
RP -> JS : ExecuteJavaScript("godotEventSystem.emit()")
activate JS

JS -> JS : Execute registered callback
note right: Registered with godotEventSystem.on()
JS --> JS : Update UI
deactivate JS

RP --> MP : Message processed
deactivate RP

MP --> GD : Complete
deactivate MP

== JavaScript to Godot ==

JS -> RP : window.godot.modify_xp(42)
activate RP

RP -> RP : GodotMethodHandler::Execute()
note right: Convert JS args to CEF types

RP -> MP : SendProcessMessage("callGodotMethod", ["modify_xp", 42])
activate MP

MP -> MP : OnProcessMessageReceived()
MP -> GD : Execute Callable("modify_xp")
activate GD

GD -> GD : Update game state
deactivate GD

MP --> RP : Complete
deactivate MP

deactivate RP

@enduml